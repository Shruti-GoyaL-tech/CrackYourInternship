class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        vector<vector<int>> v(n, vector<int>(n,1e9));
        for(int i=0; i<edges.size(); i++){
            v[edges[i][0]][edges[i][1]]=edges[i][2];
            v[edges[i][1]][edges[i][0]]=edges[i][2];
        }

        for(int i=0; i<n; i++){
            v[i][i]=0;
        }

        for(int k=0; k<n; k++){
            for(int i=0; i<n; i++){
                for(int j=0; j<n; j++){
                    if(i!=j&&v[i][k]!=1e9 && v[k][j]!=1e9 && v[i][j]>v[i][k]+v[k][j]){
                        v[i][j]=v[i][k]+v[k][j];
                    }
                }
            }
        }
        int ans=1e9;
        int ind=-1;
        for(int i=0; i<n; i++){
            int cnt=0;
            for(int j=0; j<n; j++){
                if(v[i][j]<=distanceThreshold){
                    cnt++;
                }
            }
            if(cnt<=ans){
                ans=cnt;
                ind=i;
            }
        }
        return ind;
    }
};
