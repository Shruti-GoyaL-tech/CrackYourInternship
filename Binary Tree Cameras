/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
// 0 ka matlab you are viewed
// -1 ka matlab you have a camera now
// 1 you need a camera by your parent

// Link- https://youtu.be/uoFrIIrp5_g?si=jDB3hOdcszW0ywn0

    int camera=0;

    int f(TreeNode* root){
        if(root==NULL) return 1;
        int left = f(root->left);
        int right = f(root->right);

        if(left==-1||right==-1){
            camera++;
            return 0;
        }

        if(left==0||right==0){
            return 1;
        }
        
        return -1;
    }

    int minCameraCover(TreeNode* root) {
        int last=f(root);
        if(last==-1) camera++;
        return camera;
    }
};
