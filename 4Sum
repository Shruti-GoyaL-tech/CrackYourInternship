class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        sort(nums.begin(), nums.end());
        vector<vector<int>> ans;
        int n=nums.size();
        long long targets=target;
        for(int i=0; i<n-3; i++){
            if(i-1>=0 && nums[i]==nums[i-1]) continue;
            vector<int> temp;
            targets=targets-nums[i];
            temp.push_back(nums[i]);
            for(int j=i+1; j<n-2; j++){
                if(j!=i+1 && nums[j]==nums[j-1]) continue;
                temp.push_back(nums[j]);
                targets=targets-nums[j];
                int start=j+1;
                int stop=n-1;
                while(start<stop){
                    if(nums[start]+nums[stop]==targets){
                        temp.push_back(nums[start]);
                        temp.push_back(nums[stop]);
                        ans.push_back(temp);
                        temp.pop_back();
                        temp.pop_back();
                        while(start+1<stop && nums[start+1]==nums[start]){
                            start++;
                        }
                        start++;
                        while(start-1>start && nums[stop-1]==nums[stop]){
                            stop--;
                        }
                        stop--;
                    }
                    else if(nums[start]+nums[stop]<targets){
                        start++;
                    }
                    else{
                        stop--;
                    }
                }
                targets+=nums[j];
                temp.pop_back();
            }
            targets+=nums[i];
        }
        return ans;
    }
};
