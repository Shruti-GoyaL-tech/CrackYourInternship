/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        if(root==NULL) return {};
        map<int,map<int,vector<int> > > mp;
        vector<vector<int>> ans;
        queue<pair<int,pair<int,TreeNode*>>>q;
        q.push({0,{0,root}});
        while(!q.empty()){
            int hd=q.front().first;
            int lvl=q.front().second.first;
            TreeNode* curr=q.front().second.second;
            q.pop();
            mp[hd][lvl].push_back(curr->val);
            if(curr->left){
                q.push({hd-1,{lvl+1, curr->left}});
            }
            if(curr->right){
                q.push({hd+1,{lvl+1, curr->right}});
            }
        }

        for(auto i:mp){
            vector<int> v;
            for(auto j:i.second){
                sort(j.second.begin(),j.second.end());
                for(auto k: j.second){
                    v.push_back(k);
                }
            }
            ans.push_back(v);
        }
        return ans;
    }
};
