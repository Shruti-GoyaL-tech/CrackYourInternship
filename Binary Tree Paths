/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 #include<string.h>
class Solution {
public:

    void f(TreeNode* root, vector<string> & ans, string s){
        if(root==NULL) return;
        if(root->left==NULL && root->right==NULL){
            ans.push_back(s+to_string(root->val));
            return;
        }
        f(root->left, ans, s+to_string(root->val)+"->");
        f(root->right, ans, s+to_string(root->val)+"->");
        return;
    }

    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> ans;
        f(root, ans, "");
        return ans;
    }
};
