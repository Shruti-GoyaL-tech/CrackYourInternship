class Solution {
  public:
    // Function to detect cycle in a directed graph.
    
    bool dfs(int node,vector<int> adj[],vector<bool> &visited, vector<bool> &activeDFS){
        visited[node]=1;
        activeDFS[node]=1;
        for(auto i:adj[node]){
            if(!visited[i]){
                if(dfs(i,adj,visited,activeDFS)) return true;
            }
            else if(activeDFS[i]){
                return true;
            }
        }
        activeDFS[node]=0;
        return false;
    }
    
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
        vector<bool> vis(V,0);
        vector<bool> activeDFS(V,0);
        for(int i=0; i<V; i++){
            if(vis[i]==1) continue;
            if(dfs(i,adj,vis,activeDFS)) return true;
        }
        return false;
    }
};
