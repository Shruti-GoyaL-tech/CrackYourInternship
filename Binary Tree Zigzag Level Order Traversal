/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if(root==NULL) return {};
        vector<vector<int>> ans;
        bool LTR=1;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
            int n=q.size();
            vector<int> row(n);
            // if(LTR){
                for(int i=0; i<n; i++){
                    TreeNode* temp=q.front();
                    q.pop();
                    int ind= LTR==1?i:n-i-1;
                    row[ind]=temp->val; 
                    if(temp->left) q.push(temp->left);
                    if(temp->right) q.push(temp->right);
                }
            // }
            // else{
            //     for(int i=n-1; i>=0; i--){
            //         TreeNode* temp=q.front();
            //         q.pop();
            //         row[i]=temp->val; 
            //         if(temp->left) q.push(temp->left);
            //         if(temp->right) q.push(temp->right);
            //     }
            // }
            LTR=!LTR;
            ans.push_back(row);
        }
        return ans;
    }
};
