// class Solution {
// public:
// void fun(vector<int> &vec, int buy, int sell, int &maxi){
//     if(buy>=vec.size()||sell>=vec.size()){
//         return ;
//     }
//     maxi=max(vec[sell]-vec[buy],maxi);
//     if(sell==vec.size()-1){
//         fun(vec, buy+1, buy+2, maxi);
//     }
//     else{
//         fun(vec, buy, sell+1, maxi);
//     }
//     return;
// }
//     int maxProfit(vector<int>& prices) {
//         int maxi=0;
//         fun(prices, 0, 1, maxi);
//         return maxi;
//     }
// };


class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int profit=0;
        int buy=prices[0];
        for(int i=1; i<prices.size(); i++){
            if(prices[i]<buy){
                buy=prices[i];
            }
            else{
                profit=max(profit, prices[i]-buy);
            }
        }
        return profit;
    }
};
