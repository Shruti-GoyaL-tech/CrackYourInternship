class Solution {
    vector<int> delRow={-1,1,0,0};
    vector<int> delCol={0,0,-1,1};
public:
    int numIslands(vector<vector<char>>& grid) {
        int cnt=0;
        int row=grid.size();
        int col=grid[0].size();
        vector<vector<bool>> vis(row, vector<bool>(col,0));
        for(int i=0; i<row;i++){
            for(int j=0; j<col; j++){
                if(grid[i][j]=='1' && vis[i][j]==false){
                    cnt++;
                    queue<pair<int,int>>q;
                    q.push({i,j});
                    vis[i][j]=1;
                    while(!q.empty()){
                        int currRow=q.front().first;
                        int currCol=q.front().second;
                        q.pop();
                        for(int k=0; k<4; k++){
                            if(currRow+delRow[k]>=0&&currRow+delRow[k]<row&&currCol+delCol[k]>=0&&currCol+delCol[k]<col&&grid[currRow+delRow[k]][currCol+delCol[k]]=='1'&&vis[currRow+delRow[k]][currCol+delCol[k]]==0){
                                q.push({currRow+delRow[k],currCol+delCol[k]});
                                vis[currRow+delRow[k]][currCol+delCol[k]]=1;
                            }
                        }
                    }
                }
            }
        }
        return cnt;
    }
};
