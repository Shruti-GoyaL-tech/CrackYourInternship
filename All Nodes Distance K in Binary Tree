/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:

    unordered_map<TreeNode*,TreeNode*> parent;

    vector<int> ans;

    void make_parent(TreeNode* root){
        if(root->left){
            parent[root->left]=root;
            make_parent(root->left);
        }
        if(root->right){
            parent[root->right]=root;
            make_parent(root->right);
        }
    }

    void f(TreeNode* root, TreeNode* target, int k) {
        if(root==NULL) return;
        if(k==0){
            ans.push_back(root->val);
            return;
        }

        if(root->left!=target) f(root->left,root, k-1);
        if(root->right!=target) f(root->right,root, k-1);
        if(parent[root]!=target) f(parent[root],root, k-1);

    }

    vector<int> distanceK(TreeNode* root, TreeNode* target, int k) {
        make_parent(root);
        f(target,NULL,k);
        return ans;
    }
};
