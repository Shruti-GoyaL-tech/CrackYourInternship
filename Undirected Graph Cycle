class Solution {
  public:
    // Function to detect cycle in an undirected graph.
    bool isCycle(int V, vector<int> adj[]) {
        // Code here
        vector<int> visited(V,0);
        vector<int> parent(V,-1);
        queue<int> q;
        for(int i=0; i<V; i++){
            if(visited[i]==1) continue;
            q.push(i);
            visited[i]=1;
            while(!q.empty()){
                int ele=q.front();
                q.pop();
                for(auto k:adj[ele]){
                    if(!visited[k]){
                        parent[k]=ele;
                        q.push(k);
                        visited[k]=1;
                    }
                    else if(parent[ele]!=k){
                        return true;
                    }
                }
            }
        }
        return false;
    }
};
